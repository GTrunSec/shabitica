Author: aszlig <aszlig@nix.build>
Date:   Thu May 10 02:41:12 2018 +0200

    groups: Strip Markdown from claimed task messages
    
    So far if a task contained Markdown, a system message like this would
    have been posted to the group chat:
    
    foo has claimed "Some [link](http://example.org/)"
    
    Also, if the Markdown contained backticked code fragments, the whole
    text would be displayed in red except the code part.
    
    The reason for this is because the system message is already in Markdown
    and a backticked task text would result in the following Markdown:
    
    `foo has claimed "Foo `bar`"`
    
    Here there are two code blocks, one with `foo has claimed "Foo ` and
    another which only has `"`.
    
    This is fixed by running the task text through the Markdown parser and
    stripping all HTML tags from it.
    
    Signed-off-by: aszlig <aszlig@nix.build>
    Filename: group-claim-strip-markdown.patch

diff --git a/test/api/v3/integration/tasks/groups/POST-tasks_group_id_assign_user_id.test.js b/test/api/v3/integration/tasks/groups/POST-tasks_group_id_assign_user_id.test.js
index 22029de3e..75e47c253 100644
--- a/test/api/v3/integration/tasks/groups/POST-tasks_group_id_assign_user_id.test.js
+++ b/test/api/v3/integration/tasks/groups/POST-tasks_group_id_assign_user_id.test.js
@@ -102,6 +102,24 @@ describe('POST /tasks/:taskId/assign/:memberId', () => {
     expect(updateGroup.chat[0].uuid).to.equal('system');
   });
 
+  it('strips markdown within task claim message', async () => {
+    let mdTask = await user.post(`/tasks/group/${guild._id}`, {
+      text: '[some](http://example.org) `Markdown` "used" <**here**> &',
+      type: 'habit',
+      up: false,
+      down: true,
+      notes: 1976,
+    });
+
+    await member.post(`/tasks/${mdTask._id}/assign/${member._id}`);
+
+    let updateGroup = await user.get(`/groups/${guild._id}`);
+
+    let plain = 'some Markdown "used" <here> &';
+    expect(updateGroup.chat[0].text).to.equal(t('userIsClamingTask', {username: member.profile.name, task: plain}));
+    expect(updateGroup.chat[0].uuid).to.equal('system');
+  });
+
   it('assigns a task to a user', async () => {
     await user.post(`/tasks/${task._id}/assign/${member._id}`);
 
diff --git a/website/server/controllers/api-v3/tasks/groups.js b/website/server/controllers/api-v3/tasks/groups.js
index a6076c9f0..0387ac204 100644
--- a/website/server/controllers/api-v3/tasks/groups.js
+++ b/website/server/controllers/api-v3/tasks/groups.js
@@ -13,6 +13,7 @@ import {
   moveTask,
 } from '../../../libs/taskManager';
 import apiError from '../../../libs/apiError';
+import habiticaMarkdown from 'habitica-markdown';
 
 let requiredGroupFields = '_id leader tasksOrder name';
 let types = Tasks.tasksTypes.map(type => `${type}s`);
@@ -198,7 +199,17 @@ api.assignTask = {
 
     // User is claiming the task
     if (user._id === assignedUserId) {
-      let message = res.t('userIsClamingTask', {username: user.profile.name, task: task.text});
+      // Render to Markdown and strip off all HTML, because the claim message
+      // is wrapped within backticks.
+      let taskText = habiticaMarkdown.render(task.text)
+        .trim()
+        .replace(/<(?:.|[\S\s])*?>/gm, '')
+        .replace(/&amp;/g, '&')
+        .replace(/&quot;/g, '"')
+        .replace(/&gt;/g, '>')
+        .replace(/&lt;/g, '<');
+
+      let message = res.t('userIsClamingTask', {username: user.profile.name, task: taskText});
       const newMessage = group.sendChat(message);
       promises.push(newMessage.save());
     }
