Author: aszlig <aszlig@nix.build>
Date:   Tue Mar 27 05:37:18 2018 +0200

    Use ADMIN_EMAIL everywhere, except when hardcoded
    
    There were multiple different email addresses for different
    responsibilities, like COMMUNITY_MANAGER_EMAIL, TECH_ASSISTANCE_EMAIL,
    FLAG_REPORT_EMAILS and PRESS_ENQUIRY_EMAIL.
    
    For a standalone instance it doesn't make a lot of sense to have these,
    as the amount of users residing on that instance will be very low.
    
    Other than that there are a few hardcoded email addresses spread around
    the code, which is not the scope of this commit because we're patching
    them while building the Nix derivation using sed.
    
    Signed-off-by: aszlig <aszlig@nix.build>
    Filename: one-admin-mailaddr.patch

diff --git a/config.json.example b/config.json.example
index 4b187a7ec..7f562276f 100644
--- a/config.json.example
+++ b/config.json.example
@@ -16,11 +16,5 @@
     "SESSION_SECRET_IV": "12345678912345678912345678912345",
     "ADMIN_EMAIL": "you@example.com",
     "SENDMAIL_PATH": "/usr/sbin/sendmail",
-    "MAIL_FROM": "unconfigured@example.com",
-    "FLAG_REPORT_EMAIL": "email@mod.com,email2@mod.com",
-    "EMAILS" : {
-        "COMMUNITY_MANAGER_EMAIL" : "leslie@habitica.com",
-        "TECH_ASSISTANCE_EMAIL" : "admin@habitica.com",
-        "PRESS_ENQUIRY_EMAIL" : "leslie@habitica.com"
-    }
+    "MAIL_FROM": "unconfigured@example.com"
 }
diff --git a/webpack/config/prod.env.js b/webpack/config/prod.env.js
index cf04a520a..5bfbbd7ef 100644
--- a/webpack/config/prod.env.js
+++ b/webpack/config/prod.env.js
@@ -17,9 +17,9 @@ let env = {
   NODE_ENV: '"production"',
   // clientVars: CLIENT_VARS,
   EMAILS: {
-    COMMUNITY_MANAGER_EMAIL: `"${nconf.get('EMAILS:COMMUNITY_MANAGER_EMAIL')}"`,
-    TECH_ASSISTANCE_EMAIL: `"${nconf.get('EMAILS:TECH_ASSISTANCE_EMAIL')}"`,
-    PRESS_ENQUIRY_EMAIL: `"${nconf.get('EMAILS:PRESS_ENQUIRY_EMAIL')}"`,
+    COMMUNITY_MANAGER_EMAIL: `"${nconf.get('ADMIN_EMAIL')}"`,
+    TECH_ASSISTANCE_EMAIL: `"${nconf.get('ADMIN_EMAIL')}"`,
+    PRESS_ENQUIRY_EMAIL: `"${nconf.get('ADMIN_EMAIL')}"`,
   },
 };
 
diff --git a/website/server/controllers/api-v3/auth.js b/website/server/controllers/api-v3/auth.js
index d9499e5b8..bb27905be 100644
--- a/website/server/controllers/api-v3/auth.js
+++ b/website/server/controllers/api-v3/auth.js
@@ -22,8 +22,8 @@ import common from '../../../common';
 import { validatePasswordResetCodeAndFindUser, convertToBcrypt} from '../../libs/password';
 
 const BASE_URL = nconf.get('BASE_URL');
-const TECH_ASSISTANCE_EMAIL = nconf.get('EMAILS:TECH_ASSISTANCE_EMAIL');
-const COMMUNITY_MANAGER_EMAIL = nconf.get('EMAILS:COMMUNITY_MANAGER_EMAIL');
+const TECH_ASSISTANCE_EMAIL = nconf.get('ADMIN_EMAIL');
+const COMMUNITY_MANAGER_EMAIL = nconf.get('ADMIN_EMAIL');
 const USERNAME_LENGTH_MIN = 1;
 const USERNAME_LENGTH_MAX = 20;
 
diff --git a/website/server/controllers/api-v3/chat.js b/website/server/controllers/api-v3/chat.js
index 11e740da6..d90b51324 100644
--- a/website/server/controllers/api-v3/chat.js
+++ b/website/server/controllers/api-v3/chat.js
@@ -17,7 +17,7 @@ import guildsAllowingBannedWords from '../../libs/guildsAllowingBannedWords';
 import { getMatchesByWordArray } from '../../libs/stringUtils';
 import bannedSlurs from '../../libs/bannedSlurs';
 
-const FLAG_REPORT_EMAILS = nconf.get('FLAG_REPORT_EMAIL').split(',').map((email) => {
+const FLAG_REPORT_EMAILS = nconf.get('ADMIN_EMAIL').split(',').map((email) => {
   return { email, canSend: true };
 });
 
diff --git a/website/server/controllers/api-v3/groups.js b/website/server/controllers/api-v3/groups.js
index ca9b485ba..ea2b11f43 100644
--- a/website/server/controllers/api-v3/groups.js
+++ b/website/server/controllers/api-v3/groups.js
@@ -23,7 +23,7 @@ import shared from '../../../common';
 import apiMessages from '../../libs/apiMessages';
 
 const MAX_EMAIL_INVITES_BY_USER = 200;
-const TECH_ASSISTANCE_EMAIL = nconf.get('EMAILS:TECH_ASSISTANCE_EMAIL');
+const TECH_ASSISTANCE_EMAIL = nconf.get('ADMIN_EMAIL');
 
 /**
  * @apiDefine GroupBodyInvalid
diff --git a/website/server/controllers/api-v3/user.js b/website/server/controllers/api-v3/user.js
index 3e55f3e36..e28514988 100644
--- a/website/server/controllers/api-v3/user.js
+++ b/website/server/controllers/api-v3/user.js
@@ -18,7 +18,7 @@ import {
 import nconf from 'nconf';
 import get from 'lodash/get';
 
-const TECH_ASSISTANCE_EMAIL = nconf.get('EMAILS:TECH_ASSISTANCE_EMAIL');
+const TECH_ASSISTANCE_EMAIL = nconf.get('ADMIN_EMAIL');
 const DELETE_CONFIRMATION = 'DELETE';
 
 /**
diff --git a/website/server/libs/chatReporting/groupChatReporter.js b/website/server/libs/chatReporting/groupChatReporter.js
index 4c1a76e33..a04478742 100644
--- a/website/server/libs/chatReporting/groupChatReporter.js
+++ b/website/server/libs/chatReporting/groupChatReporter.js
@@ -9,8 +9,8 @@ import {
 import { getGroupUrl, sendTxn } from '../email';
 import { model as Group } from '../../models/group';
 
-const COMMUNITY_MANAGER_EMAIL = nconf.get('EMAILS:COMMUNITY_MANAGER_EMAIL');
-const FLAG_REPORT_EMAILS = nconf.get('FLAG_REPORT_EMAIL').split(',').map((email) => {
+const COMMUNITY_MANAGER_EMAIL = nconf.get('ADMIN_EMAIL');
+const FLAG_REPORT_EMAILS = nconf.get('ADMIN_EMAIL').split(',').map((email) => {
   return { email, canSend: true };
 });
 
diff --git a/website/server/libs/payments.js b/website/server/libs/payments.js
index 0e1c9f319..aac5f652a 100644
--- a/website/server/libs/payments.js
+++ b/website/server/libs/payments.js
@@ -16,7 +16,7 @@ import {
   NotFound,
 } from './errors';
 
-const TECH_ASSISTANCE_EMAIL = nconf.get('EMAILS:TECH_ASSISTANCE_EMAIL');
+const TECH_ASSISTANCE_EMAIL = nconf.get('ADMIN_EMAIL');
 const JOINED_GROUP_PLAN = 'joined group plan';
 
 let api = {};
diff --git a/website/server/middlewares/auth.js b/website/server/middlewares/auth.js
index b86f525d3..3ccd9cf31 100644
--- a/website/server/middlewares/auth.js
+++ b/website/server/middlewares/auth.js
@@ -7,7 +7,7 @@ import {
 import nconf from 'nconf';
 import url from 'url';
 
-const COMMUNITY_MANAGER_EMAIL = nconf.get('EMAILS:COMMUNITY_MANAGER_EMAIL');
+const COMMUNITY_MANAGER_EMAIL = nconf.get('ADMIN_EMAIL');
 
 function getUserFields (userFieldProjection, req) {
   if (userFieldProjection) return `notifications ${userFieldProjection}`;
