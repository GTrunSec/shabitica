Author: Matteo Pagliazzi <matteopagliazzi@gmail.com>
Date:   Fri Oct 5 19:34:21 2018 +0200

    Fix and archive inbox migration
    
    This is a cherry-pick of the upstream commit[1] that not only moves the
    inbox migration script into the archive but also has a few changes in
    there which actually fix a few things contrary to what the upstream
    commit message says ("migrations: move inbox migration to archive").
    
    [1]: https://github.com/HabitRPG/habitica/commit/a35f04be46283568ae55494
    
    Filename: fix-and-archive-inbox-migration.patch
    Signed-off-by: aszlig <aszlig@nix.build>

diff --git a/migrations/20180811_inboxOutsideUser.js b/migrations/archive/2018/20180811_inboxOutsideUser.js
similarity index 75%
rename from migrations/20180811_inboxOutsideUser.js
rename to migrations/archive/2018/20180811_inboxOutsideUser.js
index e000f905a..a0e25e9c5 100644
--- a/migrations/20180811_inboxOutsideUser.js
+++ b/migrations/archive/2018/20180811_inboxOutsideUser.js
@@ -4,6 +4,7 @@
 
 const mongoose = require('mongoose');
 const monk = require('monk');
+const uuid = require('uuid').v4;
 
 const Inbox = require('../website/server/models/message').inboxModel;
 const connectionString = `mongodb://${mongoose.connection.host}`;
@@ -73,13 +74,36 @@ function updateUser (user) {
     return newMsg.toJSON();
   });
 
-  return dbInboxes.insert(newInboxMessages)
-    .then(() => {
+  const promises = newInboxMessages.map(newMsg => {
+    return (async function fn () {
+      const existing = await dbInboxes.find({_id: newMsg._id});
+
+      if (existing.length > 0) {
+        if (
+          existing[0].ownerId === newMsg.ownerId &&
+          existing[0].text === newMsg.text &&
+          existing[0].uuid === newMsg.uuid &&
+          existing[0].sent === newMsg.sent
+        ) {
+          return null;
+        }
+
+        newMsg.id = newMsg._id = uuid();
+      }
+
+      return newMsg;
+    })();
+  });
+
+  return Promise.all(promises)
+    .then((filteredNewMsg) => {
+      filteredNewMsg = filteredNewMsg.filter(m => Boolean(m && m.id && m._id && m.id == m._id));
+      return dbInboxes.insert(filteredNewMsg);
+    }).then(() => {
       return dbUsers.update({_id: user._id}, {
         $unset: {'inbox.messages': 1},
       });
-    })
-    .catch((err) => {
+    }).catch((err) => {
       console.log(err);
       return exiting(1, `ERROR! ${  err}`);
     });
