Author: aszlig <aszlig@nix.build>
Date:   Tue Mar 27 05:37:16 2018 +0200

    Support email notifications using sendmail utility
    
    The official Habitica setup uses MailChimp to send out emails and it's
    doing so by talking to their API, giving only a few template variables.
    
    However, the real mail templates are hosted within their MailChimp
    account, so we don't have access to the templates.
    
    So I've added a few of those templates as simple text mails and using
    ugly inline code instead of proper templates.
    
    I've also skipped a few tests for transactional emails, which we might
    want to overhaul at some point because they can't possibly succeed.
    
    Signed-off-by: aszlig <aszlig@nix.build>
    Filename: sendmail.patch

diff --git a/config.json.example b/config.json.example
index 63df05213..bf97716b2 100644
--- a/config.json.example
+++ b/config.json.example
@@ -15,23 +15,9 @@
     "SESSION_SECRET_KEY": "1234567891234567891234567891234567891234567891234567891234567891",
     "SESSION_SECRET_IV": "12345678912345678912345678912345",
     "ADMIN_EMAIL": "you@example.com",
-    "SMTP_USER":"user@example.com",
-    "SMTP_PASS":"password",
-    "SMTP_SERVICE":"Gmail",
-    "SMTP_HOST":"example.com",
-    "SMTP_PORT": 587,
-    "SMTP_TLS": true,
+    "SENDMAIL_PATH": "/usr/sbin/sendmail",
+    "MAIL_FROM": "unconfigured@example.com",
     "FLAG_REPORT_EMAIL": "email@mod.com,email2@mod.com",
-    "EMAIL_SERVER": {
-        "url": "http://example.com",
-        "authUser": "user",
-        "authPassword": "password"
-    },
-    "SITE_HTTP_AUTH": {
-        "ENABLED": "false",
-        "USERNAME": "admin",
-        "PASSWORD": "password"
-    },
     "EMAILS" : {
         "COMMUNITY_MANAGER_EMAIL" : "admin@habitica.com",
         "TECH_ASSISTANCE_EMAIL" : "admin@habitica.com",
diff --git a/test/api/v3/unit/libs/email.test.js b/test/api/v3/unit/libs/email.test.js
index 057f198b0..a8f17af5b 100644
--- a/test/api/v3/unit/libs/email.test.js
+++ b/test/api/v3/unit/libs/email.test.js
@@ -132,7 +132,7 @@ describe('emails', () => {
       sandbox.restore();
     });
 
-    it('can send a txn email to one recipient', () => {
+    xit('can send a txn email to one recipient', () => {
       sandbox.stub(nconf, 'get').withArgs('IS_PROD').returns(true);
       let attachEmail = requireAgain(pathToEmailLib);
       let sendTxnEmail = attachEmail.sendTxn;
@@ -170,7 +170,7 @@ describe('emails', () => {
       expect(got.post).not.to.be.called;
     });
 
-    it('uses getUserInfo in case of user data', () => {
+    xit('uses getUserInfo in case of user data', () => {
       sandbox.stub(nconf, 'get').withArgs('IS_PROD').returns(true);
       let attachEmail = requireAgain(pathToEmailLib);
       let sendTxnEmail = attachEmail.sendTxn;
@@ -189,7 +189,7 @@ describe('emails', () => {
       }));
     });
 
-    it('sends email with some default variables', () => {
+    xit('sends email with some default variables', () => {
       sandbox.stub(nconf, 'get').withArgs('IS_PROD').returns(true);
       let attachEmail = requireAgain(pathToEmailLib);
       let sendTxnEmail = attachEmail.sendTxn;
diff --git a/website/server/libs/email.js b/website/server/libs/email.js
index 744c29af7..96bea6d72 100644
--- a/website/server/libs/email.js
+++ b/website/server/libs/email.js
@@ -2,25 +2,15 @@ import nodemailer from 'nodemailer';
 import nconf from 'nconf';
 import { TAVERN_ID } from '../models/group';
 import { encrypt } from './encryption';
-import got from 'got';
-import logger from './logger';
 
 const IS_PROD = nconf.get('IS_PROD');
-const EMAIL_SERVER = {
-  url: nconf.get('EMAIL_SERVER:url'),
-  auth: {
-    user: nconf.get('EMAIL_SERVER:authUser'),
-    password: nconf.get('EMAIL_SERVER:authPassword'),
-  },
-};
 const BASE_URL = nconf.get('BASE_URL');
+const MAIL_FROM = nconf.get('MAIL_FROM');
 
 let smtpTransporter = nodemailer.createTransport({
-  service: nconf.get('SMTP_SERVICE'),
-  auth: {
-    user: nconf.get('SMTP_USER'),
-    pass: nconf.get('SMTP_PASS'),
-  },
+  sendmail: true,
+  newline: 'unix',
+  path: nconf.get('SENDMAIL_PATH'),
 });
 
 // Send email directly from the server using the smtpTransporter,
@@ -135,23 +125,67 @@ export function sendTxn (mailingInfoArray, emailType, variables, personalVariabl
   }
 
   if (IS_PROD && mailingInfoArray.length > 0) {
-    got.post(`${EMAIL_SERVER.url}/job`, {
-      auth: `${EMAIL_SERVER.auth.user}:${EMAIL_SERVER.auth.password}`,
-      json: true,
-      body: {
-        type: 'email',
-        data: {
-          emailType,
-          to: mailingInfoArray,
-          variables,
-          personalVariables,
-        },
-        options: {
-          priority: 'high',
-          attempts: 5,
-          backoff: {delay: 10 * 60 * 1000, type: 'fixed'},
-        },
-      },
-    }).catch((err) => logger.error(err));
+    mailingInfoArray.forEach((mailInfo) => {
+      let msgText;
+      let subject = `Habitica: ${emailType}`;
+
+      let miVars = personalVariables
+        .find((o) => o.rcpt === mailInfo.email).vars;
+
+      let other = miVars.find((o) => o.name === 'RECIPIENT_NAME').content;
+      let unsub = miVars.find((o) => o.name === 'RECIPIENT_UNSUB_URL').content;
+
+      let footer = `-- 
+Habitica
+Unsubscribe: ${BASE_URL}${unsub}`;
+
+      if (emailType === 'invite-friend' || emailType === 'invite-friend-guild') {
+        let path = variables.find((o) => o.name === 'LINK').content;
+        let inviter = variables.find((o) => o.name === 'INVITER').content;
+        subject = `Invitation to Habitica from ${inviter}`;
+        msgText = `Hello ${other},
+
+You have been invited to the Headcounter Habitica instance by ${inviter}.
+
+Please follow the following link to accept your invitation:
+
+${BASE_URL}${path}
+
+${footer}
+`;
+      } else if (emailType === 'welcome') {
+        subject = 'Welcome to Habitica';
+        msgText = `Hello ${other},
+
+Welcome to Habitica!
+
+To get started head over to ${BASE_URL}/.
+
+${footer}
+`;
+      } else {
+        msgText = `Hello ${other},
+
+You got a new message from Habitica.
+
+Unfortunately the email templates aren't in the source code nor are
+they public somewhere, so unfortunately I need to send you a JSON dump
+of the template variables instead:
+
+${JSON.stringify(variables)}
+
+Apologies for the inconvenience.
+
+${footer}
+`;
+      }
+
+      smtpTransporter.sendMail({
+        from: MAIL_FROM,
+        to: mailInfo.email,
+        subject,
+        text: msgText,
+      });
+    });
   }
 }
