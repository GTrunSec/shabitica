diff --git a/config.json.example b/config.json.example
index 3181d70c5..4b187a7ec 100644
--- a/config.json.example
+++ b/config.json.example
@@ -15,23 +15,9 @@
     "SESSION_SECRET_KEY": "1234567891234567891234567891234567891234567891234567891234567891",
     "SESSION_SECRET_IV": "12345678912345678912345678912345",
     "ADMIN_EMAIL": "you@example.com",
-    "SMTP_USER":"user@example.com",
-    "SMTP_PASS":"password",
-    "SMTP_SERVICE":"Gmail",
-    "SMTP_HOST":"example.com",
-    "SMTP_PORT": 587,
-    "SMTP_TLS": true,
+    "SENDMAIL_PATH": "/usr/sbin/sendmail",
+    "MAIL_FROM": "unconfigured@example.com",
     "FLAG_REPORT_EMAIL": "email@mod.com,email2@mod.com",
-    "EMAIL_SERVER": {
-        "url": "http://example.com",
-        "authUser": "user",
-        "authPassword": "password"
-    },
-    "SITE_HTTP_AUTH": {
-        "ENABLED": "false",
-        "USERNAME": "admin",
-        "PASSWORD": "password"
-    },
     "EMAILS" : {
         "COMMUNITY_MANAGER_EMAIL" : "leslie@habitica.com",
         "TECH_ASSISTANCE_EMAIL" : "admin@habitica.com",
diff --git a/website/server/libs/email.js b/website/server/libs/email.js
index 9d94b3fda..7512d9290 100644
--- a/website/server/libs/email.js
+++ b/website/server/libs/email.js
@@ -7,21 +7,13 @@ import logger from './logger';
 import common from '../../common';
 
 const IS_PROD = nconf.get('IS_PROD');
-const EMAIL_SERVER = {
-  url: nconf.get('EMAIL_SERVER:url'),
-  auth: {
-    user: nconf.get('EMAIL_SERVER:authUser'),
-    password: nconf.get('EMAIL_SERVER:authPassword'),
-  },
-};
 const BASE_URL = nconf.get('BASE_URL');
+const MAIL_FROM = nconf.get('MAIL_FROM');
 
 let smtpTransporter = nodemailer.createTransport({
-  service: nconf.get('SMTP_SERVICE'),
-  auth: {
-    user: nconf.get('SMTP_USER'),
-    pass: nconf.get('SMTP_PASS'),
-  },
+  sendmail: true,
+  newline: 'unix',
+  path: nconf.get('SENDMAIL_PATH'),
 });
 
 // Send email directly from the server using the smtpTransporter,
@@ -142,23 +134,67 @@ export function sendTxn (mailingInfoArray, emailType, variables, personalVariabl
   }
 
   if (IS_PROD && mailingInfoArray.length > 0) {
-    got.post(`${EMAIL_SERVER.url}/job`, {
-      auth: `${EMAIL_SERVER.auth.user}:${EMAIL_SERVER.auth.password}`,
-      json: true,
-      body: {
-        type: 'email',
-        data: {
-          emailType,
-          to: mailingInfoArray,
-          variables,
-          personalVariables,
-        },
-        options: {
-          priority: 'high',
-          attempts: 5,
-          backoff: {delay: 10 * 60 * 1000, type: 'fixed'},
-        },
-      },
-    }).catch((err) => logger.error(err));
+    mailingInfoArray.forEach((mailInfo) => {
+      let msgText;
+      let subject = `Habitica: ${emailType}`;
+
+      let miVars = personalVariables
+        .find((o) => o.rcpt == mailInfo.email).vars;
+
+      let other = miVars.find((o) => o.name == "RECIPIENT_NAME").content;
+      let unsub = miVars.find((o) => o.name == "RECIPIENT_UNSUB_URL").content;
+
+      let footer = `-- 
+Habitica
+Unsubscribe: ${BASE_URL}${unsub}`;
+
+      if (emailType == "invite-friend") {
+        let path = variables.find((o) => o.name == "LINK").content;
+        let inviter = variables.find((o) => o.name == "INVITER").content;
+        subject = `Invitation to Habitica from ${inviter}`;
+        msgText = `Hello ${other},
+
+You have been invited to the Headcounter Habitica instance by ${inviter}.
+
+Please follow the following link to accept your invitation:
+
+${BASE_URL}${path}
+
+${footer}
+`;
+      } else if (emailType == "welcome") {
+        subject = "Welcome to Habitica";
+        msgText = `Hello ${other},
+
+Welcome to Habitica!
+
+To get started head over to ${BASE_URL}/.
+
+${footer}
+`;
+      } else {
+        msgText = `Hello ${other},
+
+You got a new message from Habitica.
+
+Unfortunately the email templates aren't in the source code nor are
+they public somewhere, so unfortunately I need to send you a JSON dump
+of the template variables instead:
+
+${JSON.stringify(variables)}
+
+Apologies for the inconvenience.
+
+${footer}
+`;
+      }
+
+      smtpTransporter.sendMail({
+        from: MAIL_FROM,
+        to: mailInfo.email,
+        subject,
+        text: msgText
+      });
+    });
   }
 }
